name: 'build-and-push-devcontainer-all-vers' 
on: # rebuild when devcontainer is updated
  push:
    paths:
      - '.devcontainer/**'
    branches:
      - main
  workflow_dispatch:  

jobs:
   build-all-vers:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:        
        # platform: [linux/amd64,linux/arm64]
        # min Ghidra java version
        java-ver: [17]
        # pyhidra min Ghidra version 10.1.1
        ghidra-ver: ['11.0.2', '11.0.1', '11.0' , '10.4', '10.3.3', '10.2.3', '10.1.5']
        python-ver: ['3.12', '3.11', '3.10', '3.9','3.8']
        debian-name: [bookworm]
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx for multi-architecture builds
        uses: docker/setup-buildx-action@v2
        with:
          use: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build all devcontainers Multi-Platform
        uses: devcontainers/ci@v0.3
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: true # added to fix https://github.com/containers/skopeo/issues/1874
          GHIDRA-BUILD-VER: ${{matrix.ghidra-ver}}
          JAVA-BUILD-VER: ${{matrix.java-ver}}
          VARIANT: ${{matrix.python-ver}}-${{matrix.debian-name}}
        with:
          imageName: ghcr.io/${{ github.repository }}
          # cacheFrom: ghcr.io/${{ github.repository }}
          # platform: ${{matrix.platform}}
          platform: linux/amd64,linux/arm64
          push: always
          imageTag: ${{matrix.ghidra-ver}}ghidra${{matrix.python-ver}}python-${{matrix.debian-name}}
          
   # build-latest:
   #  needs: build-all-vers
   #  runs-on: ubuntu-latest
   #  strategy:
   #    fail-fast: false
   #    matrix:        
   #      # platform: [linux/amd64,linux/arm64]
   #      # min Ghidra java version
   #      java-ver: [17]
   #      # pyhidra min Ghidra version 10.1.1
   #      ghidra-ver: ['latest']
   #      python-ver: ['3']
   #      debian-name: [bookworm]
   #  steps:
   #    - name: Checkout (GitHub)
   #      uses: actions/checkout@v3

   #    - name: Set up QEMU for multi-architecture builds
   #      uses: docker/setup-qemu-action@v2

   #    - name: Setup Docker buildx for multi-architecture builds
   #      uses: docker/setup-buildx-action@v2
   #      with:
   #        use: true

   #    - name: Login to GitHub Container Registry
   #      uses: docker/login-action@v2
   #      with:
   #        registry: ghcr.io
   #        username: ${{ github.repository_owner }}
   #        password: ${{ secrets.GITHUB_TOKEN }}

   #    - name: Build latest devcontainer Multi-Platform
   #      uses: devcontainers/ci@v0.3
   #      env:
   #        BUILDX_NO_DEFAULT_ATTESTATIONS: true # added to fix https://github.com/containers/skopeo/issues/1874
   #        GHIDRA-BUILD-VER: ${{matrix.ghidra-ver}}
   #        JAVA-BUILD-VER: ${{matrix.java-ver}}
   #        VARIANT: ${{matrix.python-ver}}-${{matrix.debian-name}}
   #      with:
   #        imageName: ghcr.io/${{ github.repository }}
   #        cacheFrom: ghcr.io/${{ github.repository }}
   #        # platform: ${{matrix.platform}}
   #        platform: linux/amd64,linux/arm64
   #        push: always
   #        imageTag: latest          


          # - name: Build and run dev container task
          # uses: devcontainers/ci@v0.3
          # env:
          #   WORLD: World
          # with:
          #   subFolder: folderB
          #   imageName: ghcr.io/example/example-devcontainer
          #   runCmd: echo "$HELLO - $WORLD"
          #   env: |
          #     HELLO=Hello
          #     WORLD

          # - name: Pre-build and push image
          # uses: devcontainers/ci@v0.3
          # env:
          #   BUILDX_NO_DEFAULT_ATTESTATIONS: true
          # with:
          #   imageName: ghcr.io/${{ github.repository }}
          #   cacheFrom: ghcr.io/${{ github.repository }}
          #   platform: linux/amd64,linux/arm64
          #   push: always          
